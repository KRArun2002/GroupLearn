{"version":3,"sources":["component/ansModal.js","component/QuesListing.js","component/Header.js","App.js","serviceWorker.js","index.js"],"names":["AnsModal","props","state","question","this","title","body","className","id","tabIndex","role","aria-labelledby","aria-hidden","owner","style","width","src","profile_image","alt","display_name","dangerouslySetInnerHTML","__html","type","data-dismiss","aria-label","class","score","answers","map","ans","i","key","answer_id","is_accepted","href","link","target","Component","QuesListing","fetchData","axios","get","pageNumber","pageItems","then","response","setState","items","data","isLoading","catch","error","console","log","getQuestion","qId","question_id","ques","filter","Fragment","position","top","left","transform","pageStart","length","loadMore","hasMore","loader","data-toggle","data-target","onClick","onerror","maxWidth","tags","tag","margin","answer_count","is_answered","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f0f80cb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass AnsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: []\n    };\n  }\n  render() {\n    const { title, body } = this.props.question;\n    return (\n      <div\n        className=\"modal fade\"\n        id=\"ansModal\"\n        tabIndex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"ansModalLabel\"\n        aria-hidden=\"true\"\n      >\n        <div\n          className=\"modal-dialog modal-xl modal-dialog-scrollable\"\n          role=\"document\"\n        >\n          <div className=\"modal-content\">\n            <div className=\"modal-header align-items-center py-2 bg-light\">\n              {this.props.question.owner && (\n                <img\n                  className=\"img-thumbnail mr-2\"\n                  style={{ width: \"50px\" }}\n                  src={this.props.question.owner.profile_image}\n                  alt={this.props.question.owner.display_name}\n                  title={this.props.question.owner.display_name}\n                />\n              )}\n              <h6\n                className=\"modal-title\"\n                id=\"ansModalLabel\"\n                dangerouslySetInnerHTML={{\n                  __html: title\n                }}\n              ></h6>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"answer-body modal-body\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-2  my-auto\">\n                    <button type=\"button\" class=\"btn btn-primary align-middle\">\n                    Score: <span class=\"badge badge-light\">{this.props.question.score}</span>\n                    <span class=\"sr-only\">Score: </span>\n                    </button>\n                  </div>\n                  <div className=\"col-10\">\n                  <p className=\"border-bottom font-weight-bold pb-2 mb-0\">\n                  Question Detail\n                  </p>\n                  <div\n                    className=\"bg-light p-3 mb-2\"\n                    dangerouslySetInnerHTML={{ __html: body }}>\n                  </div>\n\n                  </div>\n                </div>\n              </div>\n\n\n              <br />\n              {/* Answer Display */}\n              {this.props.question.answers ? (\n                this.props.question.answers.map((ans, i) => {\n                  return (\n                    <div key={ans.answer_id} className=\"mb-4\">\n                      <h5 className=\"text-success font-weight-bold pb-2 mb-0 border-bottom\">\n                        {ans.is_accepted && (\n                          <i className=\"fas fa-check-double\"></i>\n                        )}{\" \"}\n                        Answer {i + 1}\n                      </h5>\n                      <div\n                        className=\"bg-light p-3\"\n                        dangerouslySetInnerHTML={{ __html: ans.body }}\n                      ></div>\n                    </div>\n                  );\n                })\n              ) : (\n                <h5 className=\"text-danger\">There is no Answer</h5>\n              )}\n            </div>\n            <div className=\"modal-footer py-1 bg-light\">\n            <a className=\"btn btn-primary\" \n            href={this.props.question.link} \n            target=\"_blank\" >View Question in StackOverflow</a>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                data-dismiss=\"modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AnsModal;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/js/bootstrap.bundle\";\nimport AnsModal from \"./ansModal\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\n\n\nclass QuesListing extends Component {\n  constructor(props) {\n    \n    super();\n    this.state = {\n      items: [],\n      isLoading: true,\n      error: null,\n      question_id: null,\n      question: [],\n      pageNumber: 1,\n      pageItems: 15\n    };\n\n\n  }\n  \n\n  fetchData = () => {\n    axios\n      .get(\n        `https://api.stackexchange.com/2.2/questions?page=${this.state.pageNumber}&pagesize=${this.state.pageItems}&order=desc&sort=hot&site=stackoverflow&filter=!b1MMEU)j2D*uc1`\n      )\n      .then(response => {\n        this.setState({\n          items: [...this.state.items, ...response.data.items],\n          pageNumber: this.state.pageNumber + 1,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ error: error, isLoading: false });\n      });\n  };\n\n  getQuestion = qId => {\n    this.setState({ question_id: qId });\n    var ques = this.state.items.filter(i => {\n      return i.question_id === qId;\n    });\n    this.setState({ question: ques[0] });\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n\n  render() {\n\n    const { items, isLoading, error } = this.state;\n    return (\n      <React.Fragment>\n        {error && \"The error is: \" + error}\n        {isLoading ? (\n          <h4\n            style={{\n              position: \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\"\n            }}\n          >\n            Loading...\n          </h4>\n        ) : (\n          <div className=\"container py-5\">\n            <InfiniteScroll\n              pageStart={this.state.items.length}\n              loadMore={this.fetchData}\n              hasMore={true || false}\n              loader={\n                <div className=\"loader\" key={0}>\n                  Loading ...\n                </div>\n              }\n            >\n\n              {items.map((data, i) => {\n                return (\n                  <div\n                    key={i}\n                    className=\"question card mb-3\"\n                    data-toggle=\"modal\"\n                    data-target=\"#ansModal\"\n                    onClick={() => this.getQuestion(data.question_id)}>\n\n                    <div className=\"card-body\">\n                      <div className=\"form-row\">\n                        <div className=\"col-auto\">\n                          <img\n                            onerror=\"this.style.display='none'\"\n                            alt={data.owner.display_name}\n                            style={{ maxWidth: \"58px\" }}\n                            src={data.owner.profile_image}\n                            className=\"img-fluid\"/>\n                        </div>\n                        <div className=\"col\">\n                          <h5\n                            className=\"mb-1\"\n                            dangerouslySetInnerHTML={{ __html: data.title }}>\n                          </h5>\n                          <div>\n                          {data.owner.display_name} \n                          </div>\n                          <div>\n                          <small>\n                            {data.tags.map(tag=>(\n                            <span key={tag} className='badge badge-pill badge-secondary' style={{margin:'2px 2px'}}>{tag}</span>\n                              )\n                            )}\n                          </small>\n                          </div>\n                        </div>\n                        <div className=\"col-3 offset-3\">\n                          <span> |     Answer Count : {data.answer_count}</span><br />\n                          <span>                         \n                            {data.is_answered? (\n                            <span> |     Answered: <i className=\"fas fa-check\"></i></span>\n                            ):(\n                              <span className=\"text-danger\"> |     No Accepted Answer Yet</span>\n                            )}\n                          </span>\n                          \n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </InfiniteScroll>\n          </div>\n        )}\n        <AnsModal question={this.state.question} />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default QuesListing;\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n    }\r\n    render() {\r\n    return(\r\n      <div>\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-warning\">\r\n          <div class=\"container-fluid\">\r\n          <div class=\"navbar-header offset-1\">\r\n          <a class=\"navbar-brand\" href=\"#\"><h2>GroupLearn</h2></a>\r\n          </div>\r\n\r\n          <ul class=\"nav navbar-nav navbar-right mr-5\">\r\n          <li><a href=\"#\" class=\"nav-link btn btn-sm btn-primary text-white mr-2\" data-toggle=\"modal\" data-target=\"#myModal\"><span class=\"glyphicon glyphicon-user\"></span> Sign Up</a></li>\r\n          <li><a href=\"#\" class=\"nav-link btn btn-sm btn-primary text-white\" data-toggle=\"modal\" data-target=\"#myModal\"><span class=\"glyphicon glyphicon-log-in\"></span> Login</a></li>\r\n          </ul>\r\n          </div>\r\n        </nav>\r\n        <div class=\"jumbotron jumbotron-fluid text-center\">\r\n          <div class=\"container\">\r\n            <h3 class=\"display-5\">Stack Overflow</h3>\r\n            <p class=\"lead\">Hot Questions</p>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n        \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./App.scss\";\nimport QuesListing from \"./component/QuesListing\";\nimport Header from \"./component/Header\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <QuesListing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}